'use strict';

const Connection = require('./connection'),
      Model = require('./model'),
      errors = require('./errors');

function MySqlNode(){
    this.config = null;
    this.connection = null;
};

MySqlNode.prototype.connect = function( config, options ){
    this.config = config;
    this.connection = new Connection(config, options);
};

MySqlNode.prototype.model = function( name ){
    
    if ( this.connection == null )
        throw new errors.YetToConnectError();

    return Model.model(name, this.connection);
};

MySqlNode.prototype.execSQL = function( sqlQuery, retry=true ){
    return new Promise( async (resolve, reject)=>{
        
        if ( this.connection == null )
            return reject("please connect to MySQL database first. ");

        const queryPromise = sqlQuery => 
            new Promise((resolve, reject ) => 
                this.connection.pool.query( sqlQuery, ( error, result ) => 
                    error? reject(error): resolve(result)
                )
            );

        let result;
        
        try {
            result = await queryPromise(sqlQuery);
            return resolve(result);
        } catch( error ){
            if ( retry ){
                try {
                    result = await queryPromise(sqlQuery);
                } catch( error ){
                    return reject(error);
                }
            } else 
                return reject(error);
        };
    });
};

const mySQLNode = module.exports = exports = new MySqlNode;